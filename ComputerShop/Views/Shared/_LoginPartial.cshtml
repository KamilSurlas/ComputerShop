@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-light border-0">Wyloguj się</button>
        </form>
    </li>
}
else
{
        <li class="nav-item dropdown">
            <a class="nav-link text-Light dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false"><i class="bi bi-person-fill"></i> Twoje Konto</a>
            <div class="dropdown-menu">
                <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Zarejestruj się</a>
                <div class="dropdown-divider"></div>
                <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Logowanie</a>
            </div>
        </li>
}
</ul>
